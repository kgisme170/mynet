DECLARE @input string = "/SearchLog1.tsv";
DECLARE @d1 DateTime = System.DateTime.Parse("2019/05/31");
DECLARE @a sbyte = 0;
DECLARE @b short = 1;
DECLARE @c int = 2;
DECLARE @d long = 3L;
DECLARE @e float = 4.0f;
DECLARE @f double? = 5.0;
DECLARE @g byte = 6;
DECLARE @h ushort = 7;
DECLARE @i uint = 8;
DECLARE @j ulong = 9L;
DECLARE @a1 byte [] = new byte[] { 0, 1, 2 };
DECLARE @a2 string[] = new string[]{ "xyz", "abc", "ok" };

DECLARE @m SqlMap<string,string> = new SqlMap<string, string>
                                   {
                                   {"k1", "v1"},
                                   {"k2", "v2"}
                                   };
DECLARE @misc1 bool = false;
DECLARE @misc2 Guid = new System.Guid();
DECLARE @t = "self";
DECLARE @s1 string = "before" + @t + "after";
DECLARE @s2 string = string.Format("before{0}after", @t);
@searchlog =
    EXTRACT
        UserId int,
        Start DateTime,
        Region string,
        Query string,
        Duration int,
        Urls string,
        ClickedUrls string
    FROM @input
    USING Extractors.Tsv();
@output =
    SELECT Start,
           Region,
           Duration
    FROM @searchlog
    WHERE
    Start >= DateTime.Parse("2012/02/16")
    AND Start <= DateTime.Parse("2012/02/17");

@output2 =
    SELECT ((Double) UserId) AS DoubleId,
           Start.DayOfYear AS StartDayOfYear,
           Urls.ToUpper() AS UPPER_URLS
    FROM @searchlog;
OUTPUT @output
TO "/SearchLog_output.tsv"
USING Outputters.Tsv();

OUTPUT @output2
TO "/SearchLog_output_doubleId.tsv"
USING Outputters.Tsv();

@log2 =
    SELECT *,
           Urls.Length AS UrlLength
    FROM @searchlog;
@log3 =
    SELECT Urls,
           UrlLength
    FROM @log2;
@log4 =
    SELECT UrlLength
    FROM @log3;
@log5 =
    SELECT (UrlLength + UrlLength) AS DoubleLength
    FROM @log4;
@log6 =
    SELECT *
    FROM @log5
    WHERE DoubleLength > 80;
OUTPUT @log6
TO "/SearchLog_withLength_output.csv"
USING Outputters.Csv();

@departments =
    SELECT *
    FROM(
        VALUES
        (
            31,
            "Sales"
        ),
        (
            33,
            "Engineering"
        ),
        (
            34,
            "Clerical"
        ),
        (
            35,
            "Marketing"
        )
) AS D( DepID, DepName );
OUTPUT @departments
TO "/Departments.txt"
USING Outputters.Text(encoding: Encoding.UTF8);

@rs1 =
    SELECT ROW_NUMBER() OVER() AS RowNumber,
           Start,
           Region
    FROM @searchlog;
OUTPUT @rs1
TO "/rs1.tsv"
USING Outputters.Tsv(encoding: Encoding.[ASCII]);