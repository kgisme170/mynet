MODULE "myJoin.module";
Uet =
    testData.genUet
    (
    );

Keys =
    SELECT DISTINCT EventKey AS ek
    FROM Uet;
OUTPUT Keys
TO SSTREAM "my/Keys.ss";

SELECT Uet.EventId, Uet.EventKey
FROM Keys
     INNER JOIN
         Uet
     ON Keys.ek == Uet.EventKey;
OUTPUT
TO SSTREAM "my/dedup.ss";

Grouped =
    SELECT EventId,
           EventKey,
           COUNT( * ) AS C
    FROM Uet
    GROUP BY EventId,
             EventKey
    HAVING C == 1;
OUTPUT
TO SSTREAM "my/count.ss";

employees =
    testData.employees
    (
    );

aggre =
    SELECT deptId, SUM(salary) AS TotalSalary, MAX(salary) AS MaxSalary, FIRST(name) AS name
    FROM employees
    GROUP BY deptId;

OUTPUT aggre
TO SSTREAM "my/aggre.ss";

// 找出在employeesMore当中但是不在employees当中的人员信息

empDeptIds =
    SELECT DISTINCT(name) AS n
    FROM employees;

employeesMore =
    testData.employeesMore
    (
    );
SELECT name,
       deptId,
       salary
FROM employeesMore
     LEFT JOIN
         empDeptIds
     ON employeesMore.name == empDeptIds.n
WHERE empDeptIds.n == null;

OUTPUT
TO SSTREAM "my/setDifference.ss";