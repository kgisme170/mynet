#CS
public class MyTsvExtractor : Extractor
{
    public override Schema Produces(string[] schema, string[] args)
    {
        return new Schema(@"UserId:int,Start:DateTime,Region:string,Query:string,Duration:int,Urls:string,ClickedUrls:string");
    }
    public override IEnumerable<Row> Extract(StreamReader reader, Row outputRow, string[] args)
    {
        char delimiter = '\t';
        string line;
        while ((line = reader.ReadLine()) != null)
        {
            string[] tokens = line.Split(delimiter); // Consider using IndexOf() or IndexOfAny() instead of Split() for your extractor for improved performance
            for (int i = 0; i < tokens.Length; ++i)
            {
                outputRow[i].UnsafeSet(tokens[i]);
            }
            yield return outputRow;
        }
    }
}
#ENDCS
/*
searchlog =
    EXTRACT UserId : int,
        Start : DateTime,
        Region : string,
        Query : string,
        Duration : int,
        Urls : string,
        ClickedUrls : string
        FROM "SearchLog.txt"
    USING MyTsvExtractor();
*/
/*
searchlog =
    EXTRACT UserId : int,
        Start : DateTime,
        Region : string
        FROM "SearchLog.txt"
    USING MyTsvExtractor();

OUTPUT searchlog
TO "my/output5.txt"
USING DefaultTextOutputter();
*/

#DECLARE ResourcesPath       string = @"D:\git\ads.bi.subjectareas\target\distrib\debug\amd64\Autopilot\StreamingToBatch\Binaries\";
#DECLARE BIScopePipelinesDll string = @ResourcesPath + "Microsoft.BI.ScopePipelines.dll";
#DECLARE BICommonDll string = @ResourcesPath + "Microsoft.BI.Common.dll";
REFERENCE @BIScopePipelinesDll;
REFERENCE @BICommonDll;

#DECLARE Schema_Prod string = @"UserId:int,Start:DateTime,Region:string,Query:string,Duration:int,Urls:string,ClickedUrls:string";
#DECLARE InputFile string = "output22.bin";
#DECLARE OutputExpiration int = 14;

ProdData =
    EXTRACT *
    FROM @InputFile
    USING Microsoft.BI.ScopePipelines.BinaryExtractor(schema: @Schema_Prod);

#DECLARE OutputFile string = "useScope.tsv";
OUTPUT ProdData
TO @OutputFile
USING DefaultTextOutputter();