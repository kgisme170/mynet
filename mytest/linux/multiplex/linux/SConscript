#1. Env setttings
import os
env=Environment(ENV=os.environ)
env.Append(CXXFLAGS="--std=c++11")
#2. Targets
env.Program(target='client', source='client.cpp', LIBS=['atomic', 'pthread'])
env.Program(target='server', source='server.cpp', LIBS=['atomic', 'pthread'])
env.Program(target='testAioNotify', source='testAioNotify.cpp', LIBS=['atomic', 'pthread', 'aio'])
env.Program(target='testAioQuery', source='testAioQuery.cpp', LIBS=['atomic', 'pthread', 'aio'])
env.Program(target='testEpoll', source='testEpoll.cpp', LIBS=['atomic', 'pthread'])
env.Program(target='testLibEv', source='testLibEv.cpp', LIBS=['atomic', 'pthread', 'ev'])
env.Program(target='testLibEvent', source='testLibEvent.cpp', LIBS=['atomic', 'pthread', 'event'])
env.Program(target='testLibEventHttp', source='testLibEventHttp.cpp', LIBS=['atomic', 'pthread', 'event'])
env.Program(target='testPipeEv', source='testPipeEv.cpp', LIBS=['atomic', 'pthread', 'ev'])
env.Program(target='testRWlock', source='testRWlock.cpp', LIBS=['atomic', 'pthread'])
env.Program(target='testcwd', source='testcwd.cpp', LIBS=['atomic', 'pthread'])
env.Program(target='unixDomainSocket', source='unixDomainSocket.cpp', LIBS=['atomic', 'pthread'])
