#1. Env setttings
import os
env=Environment(ENV=os.environ)
env.Append(CXXFLAGS="--std=c++11")
#2. Targets
env.Program(target='producerConsumer', source='producerConsumer.cpp', LIBS = ['pthread'])
env.Program(target='testCondWait', source='testCondWait.cpp', LIBS = ['pthread'])
env.Program(target='testPthread', source='testPthread.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadCancel', source='testPthreadCancel.c', LIBS = ['pthread'])
env.Program(target='testPthreadCancelCpp', source='testPthreadCancelCpp.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadCancelCppStd', source='testPthreadCancelCppStd.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadCancelUnwind', source='testPthreadCancelUnwind.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadCond', source='testPthreadCond.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadExit', source='testPthreadExit.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadJoin', source='testPthreadJoin.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadMutex', source='testPthreadMutex.cpp', LIBS = ['pthread'])
env.Program(target='testPthreadReturn', source='testPthreadReturn.cpp', LIBS = ['pthread'])
env.Program(target='useTlsCheck', source=['useTlsCreate.cpp', 'useTlsCheck.cpp'], LIBS=['pthread'])
env.Program(target='usetls', source='usetls.cpp', LIBS = ['pthread'])
