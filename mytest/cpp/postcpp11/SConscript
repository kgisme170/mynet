#1. Env setttings
import os
env=Environment(ENV=os.environ)
env.Append(CXXFLAGS="--std=c++1z")
#2. Targets
env.Program(target='atomicVsMutex', source='atomicVsMutex.cpp')
env.Program(target='atomic_flag', source='atomic_flag.cpp')
env.Program(target='atomics', source='atomics.cpp')
env.Program(target='bindImpl', source='bindImpl.cpp')
env.Program(target='conditional', source='conditional.cpp')
env.Program(target='newLambda', source='newLambda.cpp')
env.Program(target='objectModel01', source='objectModel01.cpp')
env.Program(target='pv', source='pv.cpp')
env.Program(target='stdtls', source='stdtls.cpp')
env.Program(target='testSetDifference', source='testSetDifference.cpp')
env.Program(target='testStdThread', source='testStdThread.cpp')
env.Program(target='testStdThreadExit', source='testStdThreadExit.cpp')
env.Program(target='testStringCow', source='testStringCow.cpp')
env.Program(target='testTemplate', source='testTemplate.cpp')
env.Program(target='testTraits', source='testTraits.cpp')
env.Program(target='testVariadic', source='testVariadic.cpp')
env.Program(target='threadFuture', source='threadFuture.cpp')
env.Program(target='threadMutex', source='threadMutex.cpp')
env.Program(target='typeDeductionForAutoCpp17', source='typeDeductionForAutoCpp17.cpp')
env.Program(target='typeDeductionForInitializerlist', source='typeDeductionForInitializerlist.cpp')
env.Program(target='usefuture', source='usefuture.cpp')
env.Program(target='usehashmap', source='usehashmap.cpp')
env.Program(target='usemultiset', source='usemultiset.cpp')
env.Program(target='usepackagedtask', source='usepackagedtask.cpp')
env.Program(target='usepromise', source='usepromise.cpp')
env.Program(target='userDefinedLiteral', source='userDefinedLiteral.cpp')
