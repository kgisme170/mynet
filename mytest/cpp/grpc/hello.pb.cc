// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hello.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hello_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hello_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hello_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hello_2eproto() {
  protobuf_AddDesc_hello_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hello.proto");
  GOOGLE_CHECK(file != NULL);
  hello_descriptor_ = file->message_type(0);
  static const int hello_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hello, f1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hello, f2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hello, f3_),
  };
  hello_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hello_descriptor_,
      hello::default_instance_,
      hello_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hello, _has_bits_[0]),
      -1,
      -1,
      sizeof(hello),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hello, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hello_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hello_descriptor_, &hello::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hello_2eproto() {
  delete hello::default_instance_;
  delete hello_reflection_;
}

void protobuf_AddDesc_hello_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_hello_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013hello.proto\"+\n\005hello\022\n\n\002f1\030\001 \002(\005\022\n\n\002f2"
    "\030\002 \002(\005\022\n\n\002f3\030\003 \001(\005", 58);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hello.proto", &protobuf_RegisterTypes);
  hello::default_instance_ = new hello();
  hello::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hello_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hello_2eproto {
  StaticDescriptorInitializer_hello_2eproto() {
    protobuf_AddDesc_hello_2eproto();
  }
} static_descriptor_initializer_hello_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hello::kF1FieldNumber;
const int hello::kF2FieldNumber;
const int hello::kF3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hello::hello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hello)
}

void hello::InitAsDefaultInstance() {
}

hello::hello(const hello& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hello)
}

void hello::SharedCtor() {
  _cached_size_ = 0;
  f1_ = 0;
  f2_ = 0;
  f3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

hello::~hello() {
  // @@protoc_insertion_point(destructor:hello)
  SharedDtor();
}

void hello::SharedDtor() {
  if (this != default_instance_) {
  }
}

void hello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hello::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hello_descriptor_;
}

const hello& hello::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hello_2eproto();
  return *default_instance_;
}

hello* hello::default_instance_ = NULL;

hello* hello::New(::google::protobuf::Arena* arena) const {
  hello* n = new hello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hello::Clear() {
// @@protoc_insertion_point(message_clear_start:hello)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hello, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hello*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(f1_, f3_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool hello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 f1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f1_)));
          set_has_f1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_f2;
        break;
      }

      // required int32 f2 = 2;
      case 2: {
        if (tag == 16) {
         parse_f2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f2_)));
          set_has_f2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_f3;
        break;
      }

      // optional int32 f3 = 3;
      case 3: {
        if (tag == 24) {
         parse_f3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f3_)));
          set_has_f3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hello)
  return false;
#undef DO_
}

void hello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hello)
  // required int32 f1 = 1;
  if (has_f1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->f1(), output);
  }

  // required int32 f2 = 2;
  if (has_f2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->f2(), output);
  }

  // optional int32 f3 = 3;
  if (has_f3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->f3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hello)
}

::google::protobuf::uint8* hello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hello)
  // required int32 f1 = 1;
  if (has_f1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->f1(), target);
  }

  // required int32 f2 = 2;
  if (has_f2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->f2(), target);
  }

  // optional int32 f3 = 3;
  if (has_f3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->f3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hello)
  return target;
}

int hello::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hello)
  int total_size = 0;

  if (has_f1()) {
    // required int32 f1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f1());
  }

  if (has_f2()) {
    // required int32 f2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f2());
  }

  return total_size;
}
int hello::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:hello)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 f1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f1());

    // required int32 f2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 f3 = 3;
  if (has_f3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f3());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hello)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const hello* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const hello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hello)
    MergeFrom(*source);
  }
}

void hello::MergeFrom(const hello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hello)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_f1()) {
      set_f1(from.f1());
    }
    if (from.has_f2()) {
      set_f2(from.f2());
    }
    if (from.has_f3()) {
      set_f3(from.f3());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void hello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hello::CopyFrom(const hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool hello::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void hello::Swap(hello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hello::InternalSwap(hello* other) {
  std::swap(f1_, other->f1_);
  std::swap(f2_, other->f2_);
  std::swap(f3_, other->f3_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hello::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hello_descriptor_;
  metadata.reflection = hello_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hello

// required int32 f1 = 1;
bool hello::has_f1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void hello::set_has_f1() {
  _has_bits_[0] |= 0x00000001u;
}
void hello::clear_has_f1() {
  _has_bits_[0] &= ~0x00000001u;
}
void hello::clear_f1() {
  f1_ = 0;
  clear_has_f1();
}
 ::google::protobuf::int32 hello::f1() const {
  // @@protoc_insertion_point(field_get:hello.f1)
  return f1_;
}
 void hello::set_f1(::google::protobuf::int32 value) {
  set_has_f1();
  f1_ = value;
  // @@protoc_insertion_point(field_set:hello.f1)
}

// required int32 f2 = 2;
bool hello::has_f2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void hello::set_has_f2() {
  _has_bits_[0] |= 0x00000002u;
}
void hello::clear_has_f2() {
  _has_bits_[0] &= ~0x00000002u;
}
void hello::clear_f2() {
  f2_ = 0;
  clear_has_f2();
}
 ::google::protobuf::int32 hello::f2() const {
  // @@protoc_insertion_point(field_get:hello.f2)
  return f2_;
}
 void hello::set_f2(::google::protobuf::int32 value) {
  set_has_f2();
  f2_ = value;
  // @@protoc_insertion_point(field_set:hello.f2)
}

// optional int32 f3 = 3;
bool hello::has_f3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void hello::set_has_f3() {
  _has_bits_[0] |= 0x00000004u;
}
void hello::clear_has_f3() {
  _has_bits_[0] &= ~0x00000004u;
}
void hello::clear_f3() {
  f3_ = 0;
  clear_has_f3();
}
 ::google::protobuf::int32 hello::f3() const {
  // @@protoc_insertion_point(field_get:hello.f3)
  return f3_;
}
 void hello::set_f3(::google::protobuf::int32 value) {
  set_has_f3();
  f3_ = value;
  // @@protoc_insertion_point(field_set:hello.f3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
