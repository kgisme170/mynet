// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialize.proto

#ifndef PROTOBUF_serialize_2eproto__INCLUDED
#define PROTOBUF_serialize_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace lm {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_serialize_2eproto();
void protobuf_AssignDesc_serialize_2eproto();
void protobuf_ShutdownFile_serialize_2eproto();

class hello;

// ===================================================================

class hello : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lm.hello) */ {
 public:
  hello();
  virtual ~hello();

  hello(const hello& from);

  inline hello& operator=(const hello& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hello& default_instance();

  void Swap(hello* other);

  // implements Message ----------------------------------------------

  inline hello* New() const { return New(NULL); }

  hello* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hello& from);
  void MergeFrom(const hello& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hello* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required string str = 2 [default = "abc"];
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional int32 op = 3 [default = 15];
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 3;
  ::google::protobuf::int32 op() const;
  void set_op(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:lm.hello)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_op();
  inline void clear_has_op();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_str_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 op_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static hello* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hello

// optional int32 id = 1;
inline bool hello::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hello::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hello::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hello::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 hello::id() const {
  // @@protoc_insertion_point(field_get:lm.hello.id)
  return id_;
}
inline void hello::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:lm.hello.id)
}

// required string str = 2 [default = "abc"];
inline bool hello::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hello::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hello::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hello::clear_str() {
  str_.ClearToDefaultNoArena(_default_str_);
  clear_has_str();
}
inline const ::std::string& hello::str() const {
  // @@protoc_insertion_point(field_get:lm.hello.str)
  return str_.GetNoArena(_default_str_);
}
inline void hello::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(_default_str_, value);
  // @@protoc_insertion_point(field_set:lm.hello.str)
}
inline void hello::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(_default_str_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.hello.str)
}
inline void hello::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(_default_str_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.hello.str)
}
inline ::std::string* hello::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:lm.hello.str)
  return str_.MutableNoArena(_default_str_);
}
inline ::std::string* hello::release_str() {
  // @@protoc_insertion_point(field_release:lm.hello.str)
  clear_has_str();
  return str_.ReleaseNoArena(_default_str_);
}
inline void hello::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(_default_str_, str);
  // @@protoc_insertion_point(field_set_allocated:lm.hello.str)
}

// optional int32 op = 3 [default = 15];
inline bool hello::has_op() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hello::set_has_op() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hello::clear_has_op() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hello::clear_op() {
  op_ = 15;
  clear_has_op();
}
inline ::google::protobuf::int32 hello::op() const {
  // @@protoc_insertion_point(field_get:lm.hello.op)
  return op_;
}
inline void hello::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
  // @@protoc_insertion_point(field_set:lm.hello.op)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serialize_2eproto__INCLUDED
